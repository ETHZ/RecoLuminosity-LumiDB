1.          
create table revisions(
     revision_id uint64 PK,
     branch_id uint64 not null,
     name string,
     comment string,
     ctime   timestamp
)
create table revisions_id(     #id helper table
     nextid uint64 PK
)
create index revisions_branchid_idx on revision(branchid)

2.
create table luminorms(
     luminorm_id  uint64 PK
     entry_id    uint64 not null references luminorms_entries(entry_id),
     defaultnorm  float not null,
     norm_1       float,
     energy_1     float,
     norm_2       float,
     energy_2     float
)
create table luminorms_entries(   #versionable entity helper table
     entry_id uint64 PK,
     revision_id uint64 not null references revisions(revision_id),
     name string
)
create table luminorms_id(          #id helper table
     nextid uint64 PK
)
create table luminorms_entries_id(    #id helper table
     nextid uint64 PK
)
create table luminorms_rev(   
    luminorm_id uint64 not null references luminorms(luminorm_id),
    revision_id uint64 not null references revisions(revision_id) 
)
3.
create table lumidata(             #verionable data table
     lumidata_id uint64 PK,
     entry_id    uint64 not null references lumidata_entries(entry_id),
     source     string,
     runnum     uint32
)
create table lumidata_id(          #id helper table
     nextid uint64 PK
)
create table lumidata_entries(       #versionable entity table
     entry_id     uint64 not null   ,
     revision_id  uint64 not null references revision(revision_id)
)
create table lumidata_rev(   
    lumidata_id uint64 not null references lumidata(lumidata_id),
    revision_id uint64 not null references revision(revision_id) 
)
constraint lumidata_rev_uc unique(lumidata_id,revision_id)
create table lumidata_entries_id(   
     nextid uint64 PK
)

4.
create table cmsrunsummary(        #data table
     runnum uint64 PK,
     hltkey string not null,
     l1key  string,
     fillnum uint32,
     sequence    string,
     starttime   timestamp(6),
     stoptime    timestamp(6)
)
5. 
create table lumisummary(         #data table
     lumidata_id  uint64 not null refrences lumidata(lumidata_id),
     runnum      uint32,  (redundant)
     cmslsnum    uint32,
     lumilsnum   uint32,
     cmsalive    uint16,
     instlumi     float,
     instlumierror  float,
     instlumiquality  short,
     beamstatus   string,
     beamenergy float,
     cmsbxindexblob blob,
     beamintensityblob_1 blob,
     beamintesnsityblob_2 blob,
     numorbit       uint32,
     startorbit   uint32
)
6.
create table lumidetail(           #data table
     lumidata_id  uint64 not null references lumidata(lumidata_id),
     runnum       uint32, (redundant)
     cmslsnum     uint32,
     algoname     string,
     bxlumivalue  blob,
     bxlumierror    blob,
     bxlumiquality blob
)
7.
create table trgdata(                #verionable data table
     trgdata_id uint64 PK,
     entry_id  uint64 not null references trgdata_entries(entry_id),
     source string,
     runnum   uint32,
     bitzeroname string,
     bitnameblob blob
)
create table trgdata_rev(   
    trgdata_id uint64 not null references trgdata(trgdata_id),
    revision_id uint64 not null references revisions(revision_id) 
)
constraint trgdata_rev_uc unique(trgdata_id,revision_id)
create table trgdata_entries(       
     entry_id    uint64 not null	     ,
     revision_id uint64 not null references revisions(revision_id) 
)
create table trgdata_id(             #id helper table
     nextid uint64 PK
)
create table trgdata_entries_id(       #id helper table
     nextid uint64 PK
)
8.
create table lstrg(          #data table
     trgdata_id uint64 not null references trgdata(trgdata_id),
     runnum    uint32,   (redundant)
     cmslsnum  uint32,
     deadtimecount uint64,
     bitzerocount uint32,
     bitzeroprescale uint32,
     pescalesblob   blob,
     trgcountblob   blob
)
9.
create table hltdata(                #verionable data table
    hltdata_id uint64 PK,	     
    entry_id    uint64 not null references hltdata_entries(entry_id),
    runnum    uint32,
    source    string,
    npath    uint32,
    pathnameblob blob
)
create table hltdata_entries(       
     entry_id    uint64 PK,
     revision_id uint64 not null references revisions(revision_id) ,
)
create table hltdata_id(         
     nextid uint64 PK
)
create table hltdata_entries_id(     
     nextid uint64 PK
)
create table hltdata_rev(   
    hltdata_id uint64 not null references hltdata(hltdata_id),
    revision_id uint64 not null references revisions(revision_id) 
)
constraint hltdata_rev_uc unique(hltdataid,revision_id)
10.
create table lshlt(         
   hltdata_id uint64 not null references hltdata(hltdata_id),
   runnum   uint32 not null,
   cmslsnum uint32 not null,
   prescaleblob blob,
   hltcountblob    blob,
   acceptblob     blob
)
11.
create table trghltmap(           
   hltkey string not null,
   hltpathname string not null,
   l1seed      string not null
)
12.
create table lumivalidation(      
   runnum uint32 not null,
   cmslsnum uint32 not null,
   flag string,
   comment string
)

new applications:

lumiNorm create -name a -defaultnorm value -normbyenergy "[{energy1:norm1},{energy2:norm2}]" -minrun 1234 -maxrun 5678 -m comment
lumiNorm describe -name a
lumiNorm list --verbose
lumiNorm modify -name a -normbyenergy "[{energy1:norm1},{energy2:norm2}]" -minrun 1234  -maxrun 6789 -m comment

lumiTagCommit tagname -m comment 
lumiTagCopy -sourcetag a -desttag b -m comment  
lumiTagDescribe tagname -datatype 'lumi,trg,hlt,norm' --verbose

